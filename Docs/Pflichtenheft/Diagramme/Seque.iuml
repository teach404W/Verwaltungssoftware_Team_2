@startuml  
' You can also declare:
group Karte anlegen [Karte anlegen]
    user.User -> "systemController.SystemController" : option1_1()
    systemController.SystemController -> "GUI" : (Hier wird der Gui gesagt, dass ausfüllbare Textfeld anzuzeigen)
    systemController.SystemController -> "systemController.SystemController " : showOptions(false,0) + clearBox()
    systemController.SystemController -> "dataStore.DataStore" : clearSavedTempCard()
    systemController.SystemController  -> "systemController.SystemController" : return showOptions(null) ; clearBox(null)
    dataStore.DataStore -> "systemController.SystemController" : return clearSavedTempCard(null)

    GUI -> "systemController.SystemController" : 
    user.User -> "systemController.SystemController" : confirmCardName()
        systemController.SystemController -> "systemController.SystemController " : showOptions(false,0) + addToBox(1) -> erste Auswahl(Seltenheit)
        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteName geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert. Textbox wird deaktiviert; Wahlbox wird sichtbar)
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController
        systemController.SystemController  -> "systemController.SystemController" : return addbox(null) ; showOptions(null)

    user.User -> "systemController.SystemController" : confirmCardRarity()
        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteSeltenheit geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert. Textbox wird aktiviert; Wahlbox wird unsichtbar)
        systemController.SystemController -> "systemController.SystemController " : clearBox()
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController
        systemController.SystemController  -> "systemController.SystemController" : return clearBox(null)

    user.User -> "systemController.SystemController" : confirmCardDamage()
        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteDamage geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert)
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController

    user.User -> "systemController.SystemController" : confirmCardHP()
        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteHP geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert)
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController

    user.User -> "systemController.SystemController" : confirmCardAgility()

        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteAgility geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert. Textbox wird deaktiviert; Wahlbox wird sichtbar)
        systemController.SystemController -> "systemController.SystemController " : addToBox(2) -> zweite Auswahl(Element)
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController
        systemController.SystemController  -> "systemController.SystemController" : return addToBox(null)

    user.User -> "systemController.SystemController" : confirmCardElement()
        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteElement geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert)
        systemController.SystemController -> "systemController.SystemController " : clearBox() + addToBox(3) -> dritte Auswahl(Fähigkeit)
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController
        systemController.SystemController  -> "systemController.SystemController" : return clearBox(null) ; addToBox(null)

    user.User -> "systemController.SystemController" : confirmCardAbility()

        systemController.SystemController -> dataStore.DataStore : (Hier wird temp_KarteAbility geändert)
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert, Textbox unsichtbar und das Menu wird sichtbar)
        systemController.SystemController -> "systemController.SystemController " : showOptions(true,0) + clearBox() + checkCards() -> Karte wird instanziiert
        dataStore.DataStore -> systemController.SystemController
        GUI -> systemController.SystemController
        systemController.SystemController  -> "systemController.SystemController" : return showOptions(null) ; clearBox(null) ; checkCards(null)

        systemController.SystemController -> "systemController.SystemController " : checkCards()
        systemController.SystemController -> "systemController.SystemController " : instanceCard()
        systemController.SystemController -> "systemController.SystemController " : createCard(Kartenummer)
        systemController.SystemController -> "systemController.SystemController " : ID wird generiert -> generateNumber(10000, 1000000);
        systemController.SystemController  -> "systemController.SystemController" : return generateNumber(int)
        systemController.SystemController  -> "systemController.SystemController" : return checkCards(null)
        systemController.SystemController -> "dataStore.DataStore" : clearSavedTempCard()
        dataStore.DataStore -> "systemController.SystemController" : return clearSavedTempCard(null)
        systemController.SystemController  -> "systemController.SystemController" : return instanceCard(null)
        systemController.SystemController  -> "systemController.SystemController" : return createCards(null)

@enduml

@startuml 
group Meine Karten [Meine Karten]
       user.User -> "systemController.SystemController" : option2_1()
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert und ein Menü mit Karten wird sichtbar gemacht)
        GUI -> systemController.SystemController : 
        systemController.SystemController -> systemController.SystemController : (Beim Klicken auf eine Karte -> showcards(int))
        systemController.SystemController -> GUI :  (Menü wird sichtbar gemacht und sie bekommt die zurück gegebenen\nInformationen aus showcards())
        GUI -> systemController.SystemController :  
@enduml

@startuml 
group Karte bearbeiten [Karte bearbeiten]
       user.User -> "systemController.SystemController" : karteBearbeiten()
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert und ein Textfeld mit Suchmaschine vorbereitet)
        GUI -> systemController.SystemController : 
        systemController.SystemController -> dataStore.DataStore : (Beim bestätigen wird kontrolliert, ob die Karte existiert oder nicht)
        dataStore.DataStore -> systemController.SystemController : 
        systemController.SystemController -> systemController.SystemController :  ja -> showEditPanel() ; nein -> Funktion wird gestoppt
        GUI -> systemController.SystemController : 

@enduml



@startuml 
group Karte löschen [Karte löschen]
       user.User -> "systemController.SystemController" : karteLöschen()
        systemController.SystemController -> GUI : (Hier werden ActionCommands geändert und ein Textfeld mit Suchmaschine vorbereitet)
        GUI -> systemController.SystemController : 
        systemController.SystemController -> dataStore.DataStore : (Beim bestätigen wird kontrolliert, ob die Karte existiert oder nicht)
        systemController.SystemController -> dataStore.DataStore :  ja -> Karte wird gelöscht -> löschenAbfrage() \nnein -> Funktion wird gestoppt
        dataStore.DataStore -> systemController.SystemController : 
        GUI -> systemController.SystemController : 
        dataStore.DataStore -> systemController.SystemController :

@enduml